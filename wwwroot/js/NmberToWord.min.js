function NumberToWords() { var r = ["Zero", "One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine", "Ten"], e = ["Eleven", "Twelve", "Thirteen", "Fourteen", "Fifteen", "Sixteen", "Seventeen", "Eighteen", "Nineteen", "Twenty"], n = ["", "Ten", "Twenty", "Thirty", "Forty", "Fifty", "Sixty", "Seventy", "Eighty", "Ninety"], o = ["Thousand", "Lakh", "Crore"], t = ["Thousand", "Million", "Billion", "Trillion"], i = function (o) { if (o >= 100) return "greater than or equal to 100"; if (o <= 10) return r[o]; if (o <= 20) return e[o - 10 - 1]; var t = Math.floor(o % 10); o /= 10; var i = Math.floor(o % 10); return (i > 0 ? n[i] + " " : "") + (t > 0 ? r[t] : "") }, a = function (e) { if (e >= 1e3) return "greater than or equal to 1000"; var n = i(Math.floor(e % 100)); e = Math.floor(e / 100); var o = Math.floor(e % 10); return n = (o > 0 ? r[o] + " Hundred " : "") + n }; return { numberToWords: function (r) { if (isNaN(r)) return "Not a number"; var e, n = ""; if (e = Math.floor(r % 1e3), r = Math.floor(r / 1e3), n = a(e), "indian" === this.currentMode) othersArr = o, divisor = 100, func = i; else { if ("international" !== this.currentMode) throw "Invalid mode - '" + this.currentMode + "'. Supported modes: indian|international"; othersArr = t, divisor = 1e3, func = a } for (var u = 0; r > 0;) { if (u === othersArr.length - 1) { n = this.numberToWords(r) + " " + othersArr[u] + " " + n; break } e = Math.floor(r % divisor), r = Math.floor(r / divisor), 0 !== e && (n = func(e) + " " + othersArr[u] + " " + n), u++ } return n }, setMode: function (r) { if ("indian" !== r && "international" !== r) throw "Invalid mode specified - '" + r + "'. Supported modes: indian|international"; this.currentMode = r } } } var toWords = function (r) { if (isNaN(r)) return !1; var e = new NumberToWords; e.setMode("indian"); var n = r?.toString().split("."), o = e.numberToWords(n[0]); let t = n[1], i = ""; if (null != t) { var a = ["Zero", "One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine", "Ten"]; i += " point "; for (var u = 0; u < t.length; u++) { i += a[Math.floor(t[u] % 10)] + " " } } return o + i };